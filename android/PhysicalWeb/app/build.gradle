apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "physical_web.org.physicalweb"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 15
        versionName "0.1.856"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    if(new File("signing.properties").exists()) {
        Properties signingProperties = new Properties()
        signingProperties.load(new FileInputStream(new File('signing.properties')))

        signingConfigs {
            release {
                storeFile new File(signingProperties['storeFile'])
                storePassword signingProperties['storePassword']
                keyAlias signingProperties['keyAlias']
                keyPassword signingProperties['keyPassword']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }

    lintOptions {
        // We'll get to fixing the icon later
        disable 'IconLauncherShape', 'IconDensities', 'IconMissingDensityFolder', 'LongLogTag'
        // Travis requires an older api at the moment
        disable 'OldTargetApi'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile(project(':libs')) {
        exclude group: 'org.json', module: 'json'
    }

    compile 'com.android.volley:volley@aar'
    compile 'org.uribeacon:uribeacon-library-release@aar'
    compile 'com.android.support:appcompat-v7:23.0.1'
}

task checkstyle(type: Checkstyle) {
    configProperties.checkstyleSuppressionsPath = new File(rootDir, "app/config/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    classes = files("${project.rootDir}/app/build/intermediates/classes")
    excludeFilter = file("${project.rootDir}/app/config/findbugs/exclude-filter.xml")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

task pmd(type: Pmd, dependsOn: assembleDebug) {
    ignoreFailures = false
    ruleSetFiles = files("${project.rootDir}/app/config/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

check.dependsOn 'checkstyle', 'findbugs', 'lint', 'pmd'
